# =============================================================================
# Environment Variables Configuration
# =============================================================================
# 
# Copy this file to .env and update the values according to your setup
# cp env.example .env
#
# =============================================================================

# Database Configuration
# =============================================================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database_name
# For local development with Docker Compose, use the values below
DATABASE_URL=postgresql://todo_user:todo_password@localhost:5432/todo_db

# Server Configuration
# =============================================================================
# Port on which the server will run
# Default: 3000
PORT=3000

# Node Environment
# =============================================================================
# Set to 'development', 'test', or 'production'
# Default: development
NODE_ENV=development

# =============================================================================
# Docker Compose Configuration (for local development)
# =============================================================================
# When using docker-compose.yml, the following environment variables
# are automatically set for the todo-service container:
#
# DATABASE_URL=postgresql://todo_user:todo_password@postgres:5432/todo_db
# PORT=3000
# NODE_ENV=development
#
# =============================================================================
# Usage Instructions
# =============================================================================
#
# 1. Local Development (without Docker):
#    - Copy this file to .env: cp env.example .env
#    - Update DATABASE_URL to point to your PostgreSQL instance
#    - Run: pnpm install && pnpm dev
#
# 2. Local Development (with Docker Compose):
#    - No .env file needed - environment is set in docker-compose.yml
#    - Run: docker-compose up
#
# 3. Production:
#    - Copy this file to .env: cp env.example .env
#    - Update all values for your production environment
#    - Ensure DATABASE_URL points to your production PostgreSQL instance
#    - Run: pnpm install && pnpm build && pnpm start
#
# =============================================================================
# Database Setup
# =============================================================================
#
# For local development, you can use Docker to run PostgreSQL:
# docker run --name postgres-todo -e POSTGRES_DB=todo_db \
#   -e POSTGRES_USER=todo_user -e POSTGRES_PASSWORD=todo_password \
#   -p 5432:5432 -d postgres:15
#
# Or use the provided docker-compose.yml which sets up PostgreSQL automatically
#
# ============================================================================= 